//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DemoHandlingExceptions.Client.PacienteServiceReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Paciente", Namespace="http://schemas.datacontract.org/2004/07/DemoHandlingExceptions.Service")]
    [System.SerializableAttribute()]
    public partial class Paciente : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdadeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NomeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private DemoHandlingExceptions.Client.PacienteServiceReference.Sexo SexoField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Idade {
            get {
                return this.IdadeField;
            }
            set {
                if ((this.IdadeField.Equals(value) != true)) {
                    this.IdadeField = value;
                    this.RaisePropertyChanged("Idade");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Nome {
            get {
                return this.NomeField;
            }
            set {
                if ((object.ReferenceEquals(this.NomeField, value) != true)) {
                    this.NomeField = value;
                    this.RaisePropertyChanged("Nome");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public DemoHandlingExceptions.Client.PacienteServiceReference.Sexo Sexo {
            get {
                return this.SexoField;
            }
            set {
                if ((this.SexoField.Equals(value) != true)) {
                    this.SexoField = value;
                    this.RaisePropertyChanged("Sexo");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Sexo", Namespace="http://schemas.datacontract.org/2004/07/DemoHandlingExceptions.Service")]
    public enum Sexo : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Feminino = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Masculino = 1,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="PacienteServiceReference.IPacienteService")]
    public interface IPacienteService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPacienteService/Adicionar", ReplyAction="http://tempuri.org/IPacienteService/AdicionarResponse")]
        DemoHandlingExceptions.Client.PacienteServiceReference.Paciente Adicionar(DemoHandlingExceptions.Client.PacienteServiceReference.Paciente paciente);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPacienteService/Adicionar", ReplyAction="http://tempuri.org/IPacienteService/AdicionarResponse")]
        System.Threading.Tasks.Task<DemoHandlingExceptions.Client.PacienteServiceReference.Paciente> AdicionarAsync(DemoHandlingExceptions.Client.PacienteServiceReference.Paciente paciente);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPacienteService/Editar", ReplyAction="http://tempuri.org/IPacienteService/EditarResponse")]
        DemoHandlingExceptions.Client.PacienteServiceReference.Paciente Editar(DemoHandlingExceptions.Client.PacienteServiceReference.Paciente paciente);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPacienteService/Editar", ReplyAction="http://tempuri.org/IPacienteService/EditarResponse")]
        System.Threading.Tasks.Task<DemoHandlingExceptions.Client.PacienteServiceReference.Paciente> EditarAsync(DemoHandlingExceptions.Client.PacienteServiceReference.Paciente paciente);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPacienteService/Excluir", ReplyAction="http://tempuri.org/IPacienteService/ExcluirResponse")]
        bool Excluir(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPacienteService/Excluir", ReplyAction="http://tempuri.org/IPacienteService/ExcluirResponse")]
        System.Threading.Tasks.Task<bool> ExcluirAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPacienteService/ObterPorID", ReplyAction="http://tempuri.org/IPacienteService/ObterPorIDResponse")]
        DemoHandlingExceptions.Client.PacienteServiceReference.Paciente ObterPorID(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPacienteService/ObterPorID", ReplyAction="http://tempuri.org/IPacienteService/ObterPorIDResponse")]
        System.Threading.Tasks.Task<DemoHandlingExceptions.Client.PacienteServiceReference.Paciente> ObterPorIDAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPacienteService/ObterTodos", ReplyAction="http://tempuri.org/IPacienteService/ObterTodosResponse")]
        DemoHandlingExceptions.Client.PacienteServiceReference.Paciente[] ObterTodos();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPacienteService/ObterTodos", ReplyAction="http://tempuri.org/IPacienteService/ObterTodosResponse")]
        System.Threading.Tasks.Task<DemoHandlingExceptions.Client.PacienteServiceReference.Paciente[]> ObterTodosAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IPacienteServiceChannel : DemoHandlingExceptions.Client.PacienteServiceReference.IPacienteService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class PacienteServiceClient : System.ServiceModel.ClientBase<DemoHandlingExceptions.Client.PacienteServiceReference.IPacienteService>, DemoHandlingExceptions.Client.PacienteServiceReference.IPacienteService {
        
        public PacienteServiceClient() {
        }
        
        public PacienteServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public PacienteServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PacienteServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PacienteServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public DemoHandlingExceptions.Client.PacienteServiceReference.Paciente Adicionar(DemoHandlingExceptions.Client.PacienteServiceReference.Paciente paciente) {
            return base.Channel.Adicionar(paciente);
        }
        
        public System.Threading.Tasks.Task<DemoHandlingExceptions.Client.PacienteServiceReference.Paciente> AdicionarAsync(DemoHandlingExceptions.Client.PacienteServiceReference.Paciente paciente) {
            return base.Channel.AdicionarAsync(paciente);
        }
        
        public DemoHandlingExceptions.Client.PacienteServiceReference.Paciente Editar(DemoHandlingExceptions.Client.PacienteServiceReference.Paciente paciente) {
            return base.Channel.Editar(paciente);
        }
        
        public System.Threading.Tasks.Task<DemoHandlingExceptions.Client.PacienteServiceReference.Paciente> EditarAsync(DemoHandlingExceptions.Client.PacienteServiceReference.Paciente paciente) {
            return base.Channel.EditarAsync(paciente);
        }
        
        public bool Excluir(int id) {
            return base.Channel.Excluir(id);
        }
        
        public System.Threading.Tasks.Task<bool> ExcluirAsync(int id) {
            return base.Channel.ExcluirAsync(id);
        }
        
        public DemoHandlingExceptions.Client.PacienteServiceReference.Paciente ObterPorID(int id) {
            return base.Channel.ObterPorID(id);
        }
        
        public System.Threading.Tasks.Task<DemoHandlingExceptions.Client.PacienteServiceReference.Paciente> ObterPorIDAsync(int id) {
            return base.Channel.ObterPorIDAsync(id);
        }
        
        public DemoHandlingExceptions.Client.PacienteServiceReference.Paciente[] ObterTodos() {
            return base.Channel.ObterTodos();
        }
        
        public System.Threading.Tasks.Task<DemoHandlingExceptions.Client.PacienteServiceReference.Paciente[]> ObterTodosAsync() {
            return base.Channel.ObterTodosAsync();
        }
    }
}
